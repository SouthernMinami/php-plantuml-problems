/* common */
body {
    background-color: #f4f4f4;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

/* <header className="flex bg-black w-full h-24">
            <nav className={styles.nav}>
                <ul className="navbar flex items-center w-full h-full space-x-4">
                    <li className="nav-item text-4xl font-bold text-white pb-2 pl-3 pr-2">
                        <Link className="flex nav-link" href="/">
                            {title}
                        </Link>
                    </li>
                    <li className="flex items-center justify-between text-slate-400">
                        <Link href="/problems">問題一覧</Link>
                    </li>
                    <li className="flex items-center justify-between text-slate-400">
                        <Link href="/cheatSheet">チートシート</Link>
                    </li>
                </ul>
            </nav>
        </header> */
header {
    display: flex;
    background: #000;
    width: 100%;
    height: 80px;
}

nav {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
}

ul {
    display: flex;
    align-items: center;
    width: 100%;
    list-style: none;
}

li {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 1rem;
}

a {
    text-decoration: none;
    color: #fff;
    font-size: 1.1rem;
    font-weight: bold;
}

.logo {
    font-size: 2rem;
    font-weight: bold;
    color: #fff;
}

.title-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.page-title {
    font-size: 3rem;
    font-weight: bold;
    color: #333;
}

.page-description {
    font-size: 1.3rem;
    color: #333;
    text-align: center;
}

.content {
    display: flex;
    justify-content: center;
    margin-top: 2rem;
    border: 1px solid #00000048;
}

.editor-container {
    width: 100%;
    height: 100%;
}

.preview-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 50%;
}

.preview-img {
    border-radius: 5px;
}

/* Playground(index)ページ */
.buttons-container {
    display: flex;
    justify-content: center;
    margin-top: 2rem;
}

.format-btn,
.download-btn {
    padding: 10px 20px;
    margin: 0 0.5rem;
    background: #1bcdd3;
    color: #1a1717;
    border: 1px solid #1bcdd348;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.format-btn:hover,
.download-btn:hover {
    background: #1bcdd380;
    padding: 12px 22px;
    color: #ffffff6c;
}

/* Problems（問題一覧）ページ */
.table {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.table-head {
    display: flex;
    width: 100%;
}

.th {
    padding: 10px 0;
    width: 25%;
    text-align: center;
    background: #4b4646;
    color: #fff;
}

.table-row {
    display: flex;
    transition: all 0.3s ease;
}

.table-row :hover {
    background: #d6d4d4;
}

.td {
    padding: 10px 20px;
    width: 25%;
    text-align: center;
    color: #000;
    border-bottom: 1px solid #75696948;
}

.pagination {
    padding: 2px 10px;
    margin: 3rem 0.5rem;
}

.pagination-btn {
    padding: 10px 20px;
    background: #1bcdd3;
    color: #1a1717;
    border: 1px solid #1a1717;
    cursor: pointer;
    transition: all 0.3s ease;
}

.rounded-l {
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
}

.rounded-r {
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px;
}

.bg-blue-500 {
    background: #1bcdd3;
}

.bg-gray-500 {
    background: #d6d4d4;
}

.pagination-btn:hover {
    background: #1bcdd380;
    padding: 12px 22px;
    color: #ffffff6c;
}


/* <div className="pagination px-2 py-10">
                {Array.from(Array(Math.ceil(problems.length / problemsPerPage)).keys()).map(number => {

                    const isEdgeBtn = number === 0 || number === Math.ceil(problems.length / problemsPerPage) - 1 ? true : false
                    const rounded = number === 0 ? 'rounded-l' : number === Math.ceil(problems.length / problemsPerPage) - 1 ? 'rounded-r' : ''
                    const isCurrentPage = number + 1 === currentPage ? true : false
                    const bgColor = isCurrentPage ? 'bg-blue-500' : 'bg-gray-500'

                    return (
                        <button id="pagination-btn" key={number} className={`pagination-btn px-3 py-1 ${bgColor} text-white border border-gray ${isEdgeBtn ? rounded : ''}`}>
                            {number + 1}
                        </button>

                    )
                })}
            </div> */
/* <PaginationButton problems={problems} currentPage={currentPage} setCurrentPage={setCurrentPage} /> */